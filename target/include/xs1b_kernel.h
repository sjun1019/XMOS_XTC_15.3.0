/*
 *
 * Copyright XMOS - (c) 2007 - 2018
 *
 * AUTOGENERATED - DO NOT EDIT
 * by lib_xmosutils/Scripts/CreateXS1.pl
 *
 */
#ifndef _xs1b_kernel_h_
#define _xs1b_kernel_h_
#define XS1_SR_EEBLE_SHIFT 0x0
#define XS1_SR_EEBLE_SIZE 0x1
#define XS1_SR_EEBLE_MASK (((1 << XS1_SR_EEBLE_SIZE) - 1) << XS1_SR_EEBLE_SHIFT)
#define XS1_SR_EEBLE(x) (((x) & XS1_SR_EEBLE_MASK) >> XS1_SR_EEBLE_SHIFT)
#define XS1_SR_EEBLE_SET(x, v) (((x) & ~XS1_SR_EEBLE_MASK) | (((v) << XS1_SR_EEBLE_SHIFT) & XS1_SR_EEBLE_MASK))
#define XS1_SR_IEBLE_SHIFT 0x1
#define XS1_SR_IEBLE_SIZE 0x1
#define XS1_SR_IEBLE_MASK (((1 << XS1_SR_IEBLE_SIZE) - 1) << XS1_SR_IEBLE_SHIFT)
#define XS1_SR_IEBLE(x) (((x) & XS1_SR_IEBLE_MASK) >> XS1_SR_IEBLE_SHIFT)
#define XS1_SR_IEBLE_SET(x, v) (((x) & ~XS1_SR_IEBLE_MASK) | (((v) << XS1_SR_IEBLE_SHIFT) & XS1_SR_IEBLE_MASK))
#define XS1_SR_INENB_SHIFT 0x2
#define XS1_SR_INENB_SIZE 0x1
#define XS1_SR_INENB_MASK (((1 << XS1_SR_INENB_SIZE) - 1) << XS1_SR_INENB_SHIFT)
#define XS1_SR_INENB(x) (((x) & XS1_SR_INENB_MASK) >> XS1_SR_INENB_SHIFT)
#define XS1_SR_INENB_SET(x, v) (((x) & ~XS1_SR_INENB_MASK) | (((v) << XS1_SR_INENB_SHIFT) & XS1_SR_INENB_MASK))
#define XS1_SR_ININT_SHIFT 0x3
#define XS1_SR_ININT_SIZE 0x1
#define XS1_SR_ININT_MASK (((1 << XS1_SR_ININT_SIZE) - 1) << XS1_SR_ININT_SHIFT)
#define XS1_SR_ININT(x) (((x) & XS1_SR_ININT_MASK) >> XS1_SR_ININT_SHIFT)
#define XS1_SR_ININT_SET(x, v) (((x) & ~XS1_SR_ININT_MASK) | (((v) << XS1_SR_ININT_SHIFT) & XS1_SR_ININT_MASK))
#define XS1_SR_INK_SHIFT 0x4
#define XS1_SR_INK_SIZE 0x1
#define XS1_SR_INK_MASK (((1 << XS1_SR_INK_SIZE) - 1) << XS1_SR_INK_SHIFT)
#define XS1_SR_INK(x) (((x) & XS1_SR_INK_MASK) >> XS1_SR_INK_SHIFT)
#define XS1_SR_INK_SET(x, v) (((x) & ~XS1_SR_INK_MASK) | (((v) << XS1_SR_INK_SHIFT) & XS1_SR_INK_MASK))
#define XS1_SR_SINK_SHIFT 0x5
#define XS1_SR_SINK_SIZE 0x1
#define XS1_SR_SINK_MASK (((1 << XS1_SR_SINK_SIZE) - 1) << XS1_SR_SINK_SHIFT)
#define XS1_SR_SINK(x) (((x) & XS1_SR_SINK_MASK) >> XS1_SR_SINK_SHIFT)
#define XS1_SR_SINK_SET(x, v) (((x) & ~XS1_SR_SINK_MASK) | (((v) << XS1_SR_SINK_SHIFT) & XS1_SR_SINK_MASK))
#define XS1_SR_WAITING_SHIFT 0x6
#define XS1_SR_WAITING_SIZE 0x1
#define XS1_SR_WAITING_MASK (((1 << XS1_SR_WAITING_SIZE) - 1) << XS1_SR_WAITING_SHIFT)
#define XS1_SR_WAITING(x) (((x) & XS1_SR_WAITING_MASK) >> XS1_SR_WAITING_SHIFT)
#define XS1_SR_WAITING_SET(x, v) (((x) & ~XS1_SR_WAITING_MASK) | (((v) << XS1_SR_WAITING_SHIFT) & XS1_SR_WAITING_MASK))
#define XS1_SR_FAST_SHIFT 0x7
#define XS1_SR_FAST_SIZE 0x1
#define XS1_SR_FAST_MASK (((1 << XS1_SR_FAST_SIZE) - 1) << XS1_SR_FAST_SHIFT)
#define XS1_SR_FAST(x) (((x) & XS1_SR_FAST_MASK) >> XS1_SR_FAST_SHIFT)
#define XS1_SR_FAST_SET(x, v) (((x) & ~XS1_SR_FAST_MASK) | (((v) << XS1_SR_FAST_SHIFT) & XS1_SR_FAST_MASK))
#define XS1_RES_ID_TYPE_SHIFT 0x0
#define XS1_RES_ID_TYPE_SIZE 0x4
#define XS1_RES_ID_TYPE_MASK (((1 << XS1_RES_ID_TYPE_SIZE) - 1) << XS1_RES_ID_TYPE_SHIFT)
#define XS1_RES_ID_TYPE(x) (((x) & XS1_RES_ID_TYPE_MASK) >> XS1_RES_ID_TYPE_SHIFT)
#define XS1_RES_ID_TYPE_SET(x, v) (((x) & ~XS1_RES_ID_TYPE_MASK) | (((v) << XS1_RES_ID_TYPE_SHIFT) & XS1_RES_ID_TYPE_MASK))
#define XS1_RES_ID_REGID_SHIFT 0x4
#define XS1_RES_ID_REGID_SIZE 0x4
#define XS1_RES_ID_REGID_MASK (((1 << XS1_RES_ID_REGID_SIZE) - 1) << XS1_RES_ID_REGID_SHIFT)
#define XS1_RES_ID_REGID(x) (((x) & XS1_RES_ID_REGID_MASK) >> XS1_RES_ID_REGID_SHIFT)
#define XS1_RES_ID_REGID_SET(x, v) (((x) & ~XS1_RES_ID_REGID_MASK) | (((v) << XS1_RES_ID_REGID_SHIFT) & XS1_RES_ID_REGID_MASK))
#define XS1_RES_ID_RESNUM_SHIFT 0x8
#define XS1_RES_ID_RESNUM_SIZE 0x8
#define XS1_RES_ID_RESNUM_MASK (((1 << XS1_RES_ID_RESNUM_SIZE) - 1) << XS1_RES_ID_RESNUM_SHIFT)
#define XS1_RES_ID_RESNUM(x) (((x) & XS1_RES_ID_RESNUM_MASK) >> XS1_RES_ID_RESNUM_SHIFT)
#define XS1_RES_ID_RESNUM_SET(x, v) (((x) & ~XS1_RES_ID_RESNUM_MASK) | (((v) << XS1_RES_ID_RESNUM_SHIFT) & XS1_RES_ID_RESNUM_MASK))
#define XS1_RES_ID_PORTWIDTH_SHIFT 0x10
#define XS1_RES_ID_PORTWIDTH_SIZE 0x6
#define XS1_RES_ID_PORTWIDTH_MASK (((1 << XS1_RES_ID_PORTWIDTH_SIZE) - 1) << XS1_RES_ID_PORTWIDTH_SHIFT)
#define XS1_RES_ID_PORTWIDTH(x) (((x) & XS1_RES_ID_PORTWIDTH_MASK) >> XS1_RES_ID_PORTWIDTH_SHIFT)
#define XS1_RES_ID_PORTWIDTH_SET(x, v) (((x) & ~XS1_RES_ID_PORTWIDTH_MASK) | (((v) << XS1_RES_ID_PORTWIDTH_SHIFT) & XS1_RES_ID_PORTWIDTH_MASK))
#define XS1_CHAN_ID_CHANNUM_SHIFT 0x8
#define XS1_CHAN_ID_CHANNUM_SIZE 0x8
#define XS1_CHAN_ID_CHANNUM_MASK (((1 << XS1_CHAN_ID_CHANNUM_SIZE) - 1) << XS1_CHAN_ID_CHANNUM_SHIFT)
#define XS1_CHAN_ID_CHANNUM(x) (((x) & XS1_CHAN_ID_CHANNUM_MASK) >> XS1_CHAN_ID_CHANNUM_SHIFT)
#define XS1_CHAN_ID_CHANNUM_SET(x, v) (((x) & ~XS1_CHAN_ID_CHANNUM_MASK) | (((v) << XS1_CHAN_ID_CHANNUM_SHIFT) & XS1_CHAN_ID_CHANNUM_MASK))
#define XS1_CHAN_ID_PROCESSOR_SHIFT 0x10
#define XS1_CHAN_ID_PROCESSOR_SIZE 0x8
#define XS1_CHAN_ID_PROCESSOR_MASK (((1 << XS1_CHAN_ID_PROCESSOR_SIZE) - 1) << XS1_CHAN_ID_PROCESSOR_SHIFT)
#define XS1_CHAN_ID_PROCESSOR(x) (((x) & XS1_CHAN_ID_PROCESSOR_MASK) >> XS1_CHAN_ID_PROCESSOR_SHIFT)
#define XS1_CHAN_ID_PROCESSOR_SET(x, v) (((x) & ~XS1_CHAN_ID_PROCESSOR_MASK) | (((v) << XS1_CHAN_ID_PROCESSOR_SHIFT) & XS1_CHAN_ID_PROCESSOR_MASK))
#define XS1_CHAN_ID_NODE_SHIFT 0x18
#define XS1_CHAN_ID_NODE_SIZE 0x8
#define XS1_CHAN_ID_NODE_MASK (((1 << XS1_CHAN_ID_NODE_SIZE) - 1) << XS1_CHAN_ID_NODE_SHIFT)
#define XS1_CHAN_ID_NODE(x) (((x) & XS1_CHAN_ID_NODE_MASK) >> XS1_CHAN_ID_NODE_SHIFT)
#define XS1_CHAN_ID_NODE_SET(x, v) (((x) & ~XS1_CHAN_ID_NODE_MASK) | (((v) << XS1_CHAN_ID_NODE_SHIFT) & XS1_CHAN_ID_NODE_MASK))
#define XS1_HEADER_3BYTE_CHANNUM_SHIFT 0x0
#define XS1_HEADER_3BYTE_CHANNUM_SIZE 0x8
#define XS1_HEADER_3BYTE_CHANNUM_MASK (((1 << XS1_HEADER_3BYTE_CHANNUM_SIZE) - 1) << XS1_HEADER_3BYTE_CHANNUM_SHIFT)
#define XS1_HEADER_3BYTE_CHANNUM(x) (((x) & XS1_HEADER_3BYTE_CHANNUM_MASK) >> XS1_HEADER_3BYTE_CHANNUM_SHIFT)
#define XS1_HEADER_3BYTE_CHANNUM_SET(x, v) (((x) & ~XS1_HEADER_3BYTE_CHANNUM_MASK) | (((v) << XS1_HEADER_3BYTE_CHANNUM_SHIFT) & XS1_HEADER_3BYTE_CHANNUM_MASK))
#define XS1_HEADER_3BYTE_PROCESSOR_SHIFT 0x8
#define XS1_HEADER_3BYTE_PROCESSOR_SIZE 0x8
#define XS1_HEADER_3BYTE_PROCESSOR_MASK (((1 << XS1_HEADER_3BYTE_PROCESSOR_SIZE) - 1) << XS1_HEADER_3BYTE_PROCESSOR_SHIFT)
#define XS1_HEADER_3BYTE_PROCESSOR(x) (((x) & XS1_HEADER_3BYTE_PROCESSOR_MASK) >> XS1_HEADER_3BYTE_PROCESSOR_SHIFT)
#define XS1_HEADER_3BYTE_PROCESSOR_SET(x, v) (((x) & ~XS1_HEADER_3BYTE_PROCESSOR_MASK) | (((v) << XS1_HEADER_3BYTE_PROCESSOR_SHIFT) & XS1_HEADER_3BYTE_PROCESSOR_MASK))
#define XS1_HEADER_3BYTE_NODE_SHIFT 0x10
#define XS1_HEADER_3BYTE_NODE_SIZE 0x8
#define XS1_HEADER_3BYTE_NODE_MASK (((1 << XS1_HEADER_3BYTE_NODE_SIZE) - 1) << XS1_HEADER_3BYTE_NODE_SHIFT)
#define XS1_HEADER_3BYTE_NODE(x) (((x) & XS1_HEADER_3BYTE_NODE_MASK) >> XS1_HEADER_3BYTE_NODE_SHIFT)
#define XS1_HEADER_3BYTE_NODE_SET(x, v) (((x) & ~XS1_HEADER_3BYTE_NODE_MASK) | (((v) << XS1_HEADER_3BYTE_NODE_SHIFT) & XS1_HEADER_3BYTE_NODE_MASK))
#define XS1_KEP_ALIGNMENT 0x80
#define XS1_KCALL_ALIGNMENT 0x40
#define XS1_TRAP_KCALL_OFFSET 0x40
#define XS1_ARG0_REG r0
#define XS1_ARG1_REG r1
#define XS1_ARG2_REG r2
#define XS1_ARG3_REG r3
#define XS1_RET0_REG r0
#define XS1_RET1_REG r1
#define XS1_RET2_REG r2
#define XS1_RET3_REG r3
#define XS1_DBG_T_REG_CP_NUM 0xc
#define XS1_DBG_T_REG_DP_NUM 0xd
#define XS1_DBG_T_REG_SP_NUM 0xe
#define XS1_DBG_T_REG_LR_NUM 0xf
#define XS1_DBG_T_REG_PC_NUM 0x10
#define XS1_DBG_T_REG_SR_NUM 0x11
#define XS1_DBG_T_REG_SPC_NUM 0x12
#define XS1_DBG_T_REG_SSR_NUM 0x13
#define XS1_DBG_T_REG_ET_NUM 0x14
#define XS1_DBG_T_REG_ED_NUM 0x15
#define XS1_DBG_T_REG_SED_NUM 0x16
#define XS1_DBG_T_REG_KEP_NUM 0x17
#define XS1_DBG_T_REG_KSP_NUM 0x18
#define XS1_DBG_T_REG_ID_NUM 0x19
#define XS1_STACK_OFFSET_SPC 0x1
#define XS1_STACK_OFFSET_SSR 0x2
#define XS1_STACK_OFFSET_SED 0x3
#define XS1_STACK_OFFSET_ET 0x4
#define XS1_DBG_BUFFER_WORDS 0x20
#define XS1_DBG_CAUSE_NONE 0x0
#define XS1_DBG_CAUSE_HOST 0x1
#define XS1_DBG_CAUSE_DCALL 0x2
#define XS1_DBG_CAUSE_IBREAK 0x3
#define XS1_DBG_CAUSE_DWATCH 0x4
#define XS1_DBG_CAUSE_RWATCH 0x5
#define XS1_DBG_CMD_ACK 0x0
#define XS1_DBG_CMD_NACK 0x1
#define XS1_DBG_CMD_READ 0x2
#define XS1_DBG_CMD_WRITE 0x3
#define XS1_DBG_CMD_GETPS 0x4
#define XS1_DBG_CMD_SETPS 0x5
#define XS1_DBG_CMD_GETSTATE 0x6
#define XS1_DBG_CMD_SETSTATE 0x7
#define XS1_DBG_CMD_CALL 0x8
#define XS1_DBG_CMD_RFDBG 0x9
#define XS1_DBG_CMD_READ4PI 0xa
#define XS1_DBG_CMD_WRITE4PI 0xb
#define XS1_NUM_DBG_IBREAK 0x4
#define XS1_NUM_DBG_RWATCH 0x4
#define XS1_NUM_DBG_DWATCH 0x4
#define XS1_RAM_BASE 0x10000
#define XS1_RAM_SIZE 0x10000
#define XS1_RAM_ADDR_WIDTH 0xe
#define XS1_ROM_BASE 0xffffc000
#define XS1_ROM_SIZE 0x2000
#define XS1_ROM_ADDR_WIDTH 0xb
#define XS1_DEBUG_VECTOR 0xffffd800
#define XS1_RES_PS_CTRL0 0x0
#define XS1_RES_PS_CTRL1 0x1
#define XS1_RES_PS_CTRL2 0x2
#define XS1_RES_PS_VECTOR 0x3
#define XS1_RES_PS_EV 0x4
#define XS1_RES_PS_DATA 0x5
#define XS1_RES_PS_CLKSRC 0x6
#define XS1_RES_PS_RDYSRC 0x7
#define XS1_RES_PS_TBV0 0x8
#define XS1_SETC_MODE_INUSE 0x0
#define XS1_SETC_MODE_COND 0x1
#define XS1_SETC_MODE_IE_MODE 0x2
#define XS1_SETC_MODE_DRIVE 0x3
#define XS1_SETC_MODE_LONG 0x7
#define XS1_SETC_LMODE_RUN 0x0
#define XS1_SETC_LMODE_MS 0x1
#define XS1_SETC_LMODE_BUF 0x2
#define XS1_SETC_LMODE_RDY 0x3
#define XS1_SETC_LMODE_SDELAY 0x4
#define XS1_SETC_LMODE_PORT 0x5
#define XS1_SETC_LMODE_INV 0x6
#define XS1_SETC_LMODE_PIN_DELAY 0x7
#define XS1_SETC_LMODE_FALL_DELAY 0x8
#define XS1_SETC_LMODE_RISE_DELAY 0x9
#endif /* _xs1b_kernel_h_ */
